#!/usr/bin/env ruby

require 'optparse'
require 'sqlite3'
require_relative 'models/recipe.rb'
require_relative 'models/user_interface.rb'

interface = UserInterface.new
interface.parse_options

if interface.name.nil?
  puts "Please enter a recipe name."
  exit
end

required_options = [:ingredients, :directions, :time, :meal, :serves, :calories]
# missing_options = required_options - options.keys
missing_options = required_options - interface.options.keys

if missing_options.include?(:serves)
  index = missing_options.index(:serves)
  missing_options[index] = "number served"
end

unless missing_options.empty?
  puts "You must provide the #{missing_options.join(" and ")} of the recipe you are creating."
  exit
end

# this shows how you can route to different methods based on commands
# and options
case interface.command
when "create"
  Recipe.create(interface.name, interface.options)
end

puts "Theoretically did: #{interface.command} recipe #{interface.name}; with ingredients #{interface.options[:ingredients]}; with directions #{interface.options[:directions]}; time #{interface.options[:time]}; meal #{interface.options[:meal]}; serves #{interface.options[:serves]}; calories #{interface.options[:calories]}." if interface.options[:test_output]